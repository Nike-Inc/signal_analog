@startuml
class CliBuilder {
  {field} -resources : [Resource]
  ==
  {method} +<b>using_cerberus_auth() : CliBuilder</b>
  <i>Enables Cerberus authentication for the current CLI.</i>
  ..
  {method} +<b>with_resources(*resources : [Resource]) : CliBuilder</b>
  <i>Adds the given resources to the generated CLI.</i>
  ..
  {method} +<b>build() : click.Group</b>
  <i>Constructs and returns a callable CLI object.</i>
}
note right
  This class is responsible for
  building and returning a
  callable CLI.
end note

class SignalAnalogConfig {
  {field} +resources : [Resource]
  {field} +api_key : String
}
note right
  This is a Click specific context
  object that allows us to pass options
  between commands in a group.
  The top-level Group object should
  ensure that all fields in this
  object are properly populated.
end note

class PackageMethods << (P,orchid) >> {
  {method} +<b>pass_config : Decorator</b>
  <i>Decorator for Click commands that provides</i>
  <i>an instance of SignalAnalogConfig</i>
  ..
  {method} +<b>invoke(resource : Resource, action : String, api_key : String, **action_args : Dictionary) : Dictionary</b>
  <i>Dynamically invoke the provided action for</i>
  <i>the given resource. Also passes on any</i>
  <i>optional arguments (.i.e. `dry_run`) </i>
}

together {
  class SignalAnalogConfig
  class CliBuilder
}
CliBuilder -[hidden]> PackageMethods
@enduml
