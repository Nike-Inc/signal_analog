@startuml
start
  :Dashboard::update(dry_run?, interactive?);
  if (dry_run?) then (yes)
    :Return request to caller;
    stop
  else (no)
    #Orange:**GET** /v2/dashboard?name=dashboard-name>
    note right
      All API calls imply contact with
      ""https://api.signalfx.com""

      Each network call also implies
      error handling for network/api
      related errors.
    end note
    if (found results?) then (yes)
      if (exact match?) then (yes)
        :get dashboard id from match;
        #Orange:**PUT** /v2/dashboard/<id> >
        #SpringGreen:return object to caller;
        stop
      else (no)
        if (interactive mode?) then (yes)
          partition («post-mvp») {
            :prompt user selection from partial matches;
            if (selection made?) then (yes)
              :get dashboard id from match;
              #Orange:**PUT** /v2/dashboard/<id> >
              #SpringGreen:return object to caller;
              stop
            else (no)
              #OrangeRed:raise NotFoundError;
              stop
            endif
          }
        else (no)
          #OrangeRed:raise InvalidMatchError;
          note right
            We wan't to avoid clobbering existing
            dashboards if we haven't found an
            exact match and we're in a
            non-interactive environment.
          end note
          stop
        endif
      endif
    else (no)
      #OrangeRed:raise NotFoundError;
      stop
    endif
  endif
@enduml
